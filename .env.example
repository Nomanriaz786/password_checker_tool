# Environment Configuration Template for Password Checker Tool
# Copy this file to .env and fill in your actual values
# DO NOT COMMIT .env FILE TO GIT - IT CONTAINS SENSITIVE INFORMATION

# =============================================================================
# GITHUB REPOSITORY SECRETS CONFIGURATION
# =============================================================================
# Add these secrets to your GitHub repository:
# Go to: Repository Settings > Secrets and Variables > Actions > New repository secret

# Required for SonarCloud Integration
SONAR_TOKEN=your_sonarcloud_token_here
# How to get: 
# 1. Go to https://sonarcloud.io
# 2. Sign in with GitHub account
# 3. Go to My Account > Security > Generate Token
# 4. Name: password-checker-tool-github
# 5. Copy the generated token

# Optional: SonarCloud Organization (if different from default)
SONAR_ORGANIZATION=your_github_organization_name
# Example: if your GitHub username is "john-doe", use "john-doe"

# Optional: Custom SonarCloud Project Key  
SONAR_PROJECT_KEY=your_organization_password-checker-tool
# Default format: {organization}_password-checker-tool

# =============================================================================
# DATABASE CONFIGURATION (for local development)
# =============================================================================

# Database Connection
DB_HOST=localhost
DB_NAME=password_checker
DB_USER=your_mysql_username
DB_PASSWORD=your_mysql_password
DB_PORT=3306

# Database Test Environment
DB_TEST_HOST=localhost
DB_TEST_NAME=password_checker_test  
DB_TEST_USER=your_mysql_username
DB_TEST_PASSWORD=your_mysql_password

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Environment
APP_ENV=development
# Options: development, testing, production

# Application URL
APP_URL=http://localhost/password_checker_tool
# For production: https://yourdomain.com

# Security Keys (generate random strings)
APP_KEY=your_32_character_random_string_here
CSRF_SECRET=your_csrf_secret_key_here

# Session Configuration  
SESSION_LIFETIME=3600
# Session timeout in seconds (3600 = 1 hour)

# =============================================================================
# EMAIL CONFIGURATION (for 2FA)
# =============================================================================

# Email Settings for OTP
MAIL_HOST=smtp.gmail.com
MAIL_PORT=587
MAIL_USERNAME=your_email@gmail.com
MAIL_PASSWORD=your_app_password_here
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS=your_email@gmail.com
MAIL_FROM_NAME="Password Checker Tool"

# Development Mode (set to false for production)
DEVELOPMENT_MODE=true
# When true: OTPs are logged instead of emailed

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Password Policy
MIN_PASSWORD_LENGTH=8
MAX_PASSWORD_LENGTH=128
REQUIRE_SPECIAL_CHARS=true
REQUIRE_NUMBERS=true
REQUIRE_UPPERCASE=true

# Rate Limiting
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION=900
# Lockout duration in seconds (900 = 15 minutes)

# OTP Configuration
OTP_EXPIRY_TIME=300
# OTP expiry in seconds (300 = 5 minutes)

OTP_LENGTH=6
# Length of OTP code

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level
LOG_LEVEL=info
# Options: debug, info, warning, error

# Log File Path
LOG_FILE_PATH=logs/app.log

# Enable/Disable specific logging
LOG_LOGIN_ATTEMPTS=true
LOG_PASSWORD_CHANGES=true
LOG_ADMIN_ACTIONS=true

# =============================================================================
# DEVELOPMENT TOOLS CONFIGURATION
# =============================================================================

# PHP Configuration
PHP_DISPLAY_ERRORS=false
# Set to true only for development, false for production

PHP_ERROR_REPORTING=E_ALL
# Error reporting level

# Debug Mode
DEBUG_MODE=false
# Enable detailed error messages (development only)

# =============================================================================
# GITHUB ACTIONS ENVIRONMENT VARIABLES
# =============================================================================
# These are automatically provided by GitHub Actions, no need to set manually

# GITHUB_TOKEN=automatically_provided_by_github_actions
# GITHUB_REPOSITORY=Nomanriaz786/password_checker_tool
# GITHUB_SHA=commit_sha_hash
# GITHUB_REF=refs/heads/main

# =============================================================================
# INSTRUCTIONS FOR GITHUB SECRETS SETUP
# =============================================================================

# REQUIRED GITHUB REPOSITORY SECRETS:
# ------------------------------------
# 1. SONAR_TOKEN (REQUIRED)
#    - Value: Token from SonarCloud (starts with 'squ_')
#    - How to get: SonarCloud.io > My Account > Security > Generate Token
#
# OPTIONAL GITHUB REPOSITORY SECRETS:
# -----------------------------------  
# 2. SONAR_ORGANIZATION (Optional)
#    - Value: Your GitHub organization/username
#    - Default: Auto-detected from repository
#
# 3. SONAR_PROJECT_KEY (Optional) 
#    - Value: Custom project key for SonarCloud
#    - Default: {org}_password-checker-tool
#
# 4. MYSQL_ROOT_PASSWORD (Optional, for CI/CD testing)
#    - Value: Password for MySQL root user in CI environment
#    - Default: 'root' (used in GitHub Actions)

# =============================================================================
# SONARCLOUD CONFIGURATION EXAMPLES
# =============================================================================

# Example SonarCloud Token (DO NOT USE THIS):
# SONAR_TOKEN=squ_1234567890abcdef1234567890abcdef12345678

# Example Organization:
# SONAR_ORGANIZATION=Nomanriaz786

# Example Project Key:  
# SONAR_PROJECT_KEY=Nomanriaz786_password-checker-tool

# =============================================================================
# SETUP CHECKLIST
# =============================================================================

# □ 1. Copy this file to .env
# □ 2. Fill in database credentials
# □ 3. Set up SonarCloud account at https://sonarcloud.io
# □ 4. Generate SonarCloud token
# □ 5. Add SONAR_TOKEN to GitHub repository secrets
# □ 6. Configure email settings for 2FA (if using production email)
# □ 7. Update APP_URL for your domain
# □ 8. Generate random strings for APP_KEY and CSRF_SECRET
# □ 9. Set DEVELOPMENT_MODE=false for production
# □ 10. Test the application locally

# =============================================================================
# SECURITY NOTES
# =============================================================================

# IMPORTANT SECURITY REMINDERS:
# - Never commit .env file to version control
# - Use strong, random values for secret keys
# - Use environment-specific configurations
# - Regularly rotate tokens and passwords
# - Use HTTPS in production
# - Enable proper firewall rules
# - Keep database credentials secure
# - Use app passwords for email (not main password)

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common Issues:
# - SonarCloud analysis fails: Check SONAR_TOKEN is valid
# - Database connection fails: Verify DB credentials
# - Email OTP not working: Check MAIL_* settings
# - GitHub Actions fails: Ensure all required secrets are set
# - Permission errors: Check file permissions (644 for .env)

# Support:
# - SonarCloud: https://docs.sonarcloud.io/
# - GitHub Actions: https://docs.github.com/en/actions
# - Project Issues: https://github.com/Nomanriaz786/password_checker_tool/issues